{"version":3,"sources":["cart.js"],"names":["selects","document","querySelectorAll","i","length","select","options","cSelect","createElement","cSelectList","cSelectCurrent","setAttribute","className","append","after","toggleClass","classList","toggle","desctopFn","addEventListener","mobileFn","j","mobileSelect","nextElementSibling","querySelector","textContent","value","detectmob","x","y","navigator","userAgent","match","selectItems","text","innerHTML","createCustomDom","children","items","el","selectValue","getAttribute","selectText","console","log","remove","e","contains","target"],"mappings":"AACA,MAAMA,QAAUC,SAASC,iBAAiB,WAE1C,IAAK,IAAIC,EAAI,EAAGA,EAAIH,QAAQI,OAAQD,IAAK,CACxC,MAAME,EAASL,QAAQG,GAEjBG,EAAUD,EAAOH,iBAAiB,UAGlCK,EAAUN,SAASO,cAAc,OACjCC,EAAcR,SAASO,cAAc,OACrCE,EAAiBT,SAASO,cAAc,OAE9CH,EAAOM,aAAa,WAAY,MAEhCJ,EAAQK,UAAY,gBACpBH,EAAYG,UAAY,sBACxBF,EAAeE,UAAY,yBAG3BF,EAAeC,aAAa,OAAQ,UAGpCJ,EAAQM,OAAOH,EAAgBD,GAG/BJ,EAAOS,MAAMP,GAGb,MAUMQ,EAAc,KAAQR,EAAQS,UAAUC,OAAO,wBAoB/CC,EAAY,KACjBR,EAAeS,iBAAiB,QAASJ,IAGpCK,EAAW,KAChB,IAAK,IAAIC,EAAI,EAAGA,EAAIrB,QAAQI,OAAQiB,IAAK,CACxC,IAAIC,EAAetB,QAAQqB,GAC3BC,EAAaH,iBAAiB,SAAU,KACvCG,EAAaC,mBAAmBC,cAAc,2BAA2BC,YAAcH,EAAaI,UAevG,SAASC,UAAUC,EAAGC,GACjBC,UAAUC,UAAUC,MAAM,aAC1BF,UAAUC,UAAUC,MAAM,WAC1BF,UAAUC,UAAUC,MAAM,YAC1BF,UAAUC,UAAUC,MAAM,UAC1BF,UAAUC,UAAUC,MAAM,UAC1BF,UAAUC,UAAUC,MAAM,gBAC1BF,UAAUC,UAAUC,MAAM,kBAE7BJ,IAGAC,KAjEsB,SAAUD,EAAGC,GACpC,IAAII,EAAc,GAClB,IAAK,IAAI9B,EAAI,EAAGA,EAAIG,EAAQF,OAAQD,IACnC8B,GAAe,iEAAmE3B,EAAQH,GAAGuB,MAAQ,KAAOpB,EAAQH,GAAG+B,KAAO,YAE/HzB,EAAY0B,UAAYF,EACxBL,IAAKC,KAqCNO,CA9ByB,IAAM1B,EAAee,YAAchB,EAAY4B,SAAS,GAAGZ,YAG/D,KACpB,MAAMa,EAAQ7B,EAAY4B,SAC1B,IAAK,IAAIE,EAAK,EAAGA,EAAKD,EAAMlC,OAAQmC,IAAM,CACzC,IAAIC,EAAcF,EAAMC,GAAIE,aAAa,cACrCC,EAAaJ,EAAMC,GAAId,YAC3Ba,EAAMC,GAAIpB,iBAAiB,QAAS,KACnCwB,QAAQC,IAAIN,EAAMC,IAClBhC,EAAQS,UAAU6B,OAAO,uBACzBnC,EAAee,YAAciB,EAC7BrC,EAAOqB,MAAQc,OAsBlBvC,SAASkB,iBAAiB,UAAY2B,IAChCvC,EAAQwC,SAASD,EAAEE,SAASzC,EAAQS,UAAU6B,OAAO,yBAG3DlB,UAAUP,EAAUF","file":"cart.js","sourcesContent":["//Получаем все \"select\" по селектору\r\nconst selects = document.querySelectorAll('.select')\r\n//переборка по полученным \"select\"\r\nfor (let i = 0; i < selects.length; i++) {\r\n\tconst select = selects[i]\r\n\t//получаем все \"option\" внутри \"select\"\r\n\tconst options = select.querySelectorAll('option')\r\n\r\n\t//создаем кастомный \"select\"\r\n\tconst cSelect = document.createElement('div')\r\n\tconst cSelectList = document.createElement('div')\r\n\tconst cSelectCurrent = document.createElement('div')\r\n\r\n\tselect.setAttribute('tabindex', '-1')\r\n\t//задем классы и атрибуты кастомному \"select\"\r\n\tcSelect.className = 'custom-select'\r\n\tcSelectList.className = 'custom-select__list'\r\n\tcSelectCurrent.className = 'custom-select__current'\r\n\r\n\t//по умолчанию у button будет type=\"submit\", поэтому меням на type=\"button\" чтобы избежать отправку формы при клие на кастомный \"select\"\r\n\tcSelectCurrent.setAttribute('type', 'button')\r\n\r\n\t//создаем вложенность созданных элементов\r\n\tcSelect.append(cSelectCurrent, cSelectList)\r\n\r\n\t//добавляем кастоный \"select\" сразу после оргинального \"select\"\r\n\tselect.after(cSelect)\r\n\r\n\t//получаем список и значения \"option\" из \"select\", затем создаём кастомный \"option\" для кастомного \"select\"\r\n\tconst createCustomDom = function (x, y) {\r\n\t\tlet selectItems = ''\r\n\t\tfor (var i = 0; i < options.length; i++) {\r\n\t\t\tselectItems += '<button type=\"button\" class=\"custom-select__item\" data-value=\"' + options[i].value + '\">' + options[i].text + '</button>'\r\n\t\t}\r\n\t\tcSelectList.innerHTML = selectItems\r\n\t\tx(), y();\r\n\t}\r\n\r\n\t//открываем-закрываем выпадающий список по клику\r\n\tconst toggleClass = () => { cSelect.classList.toggle('custom-select--show') }\r\n\r\n\t//присваиваем текстовое первое значение \"option\" в кастомном \"select\"\r\n\tconst currentTextValue = () => cSelectCurrent.textContent = cSelectList.children[0].textContent\r\n\r\n\t//получаем и задаем значения text/value \r\n\tconst currentValue = () => {\r\n\t\tconst items = cSelectList.children\r\n\t\tfor (var el = 0; el < items.length; el++) {\r\n\t\t\tlet selectValue = items[el].getAttribute('data-value')\r\n\t\t\tlet selectText = items[el].textContent\r\n\t\t\titems[el].addEventListener('click', () => {\r\n\t\t\t\tconsole.log(items[el])\r\n\t\t\t\tcSelect.classList.remove('custom-select--show')\r\n\t\t\t\tcSelectCurrent.textContent = selectText\r\n\t\t\t\tselect.value = selectValue\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst desctopFn = () => {\r\n\t\tcSelectCurrent.addEventListener('click', toggleClass)\r\n\t}\r\n\r\n\tconst mobileFn = () => {\r\n\t\tfor (let j = 0; j < selects.length; j++) {\r\n\t\t\tlet mobileSelect = selects[j]\r\n\t\t\tmobileSelect.addEventListener('change', () => {\r\n\t\t\t\tmobileSelect.nextElementSibling.querySelector('.custom-select__current').textContent = mobileSelect.value\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tcreateCustomDom(currentTextValue, currentValue)\r\n\r\n\r\n\t//закрываем выпадающий список по клику вне области кастомного селекта\r\n\tdocument.addEventListener('mouseup', (e) => {\r\n\t\tif (!cSelect.contains(e.target)) cSelect.classList.remove('custom-select--show')\r\n\t})\r\n\r\n\tdetectmob(mobileFn, desctopFn)\r\n\r\n\tfunction detectmob(x, y) {\r\n\t\tif (navigator.userAgent.match(/Android/i)\r\n\t\t\t|| navigator.userAgent.match(/webOS/i)\r\n\t\t\t|| navigator.userAgent.match(/iPhone/i)\r\n\t\t\t|| navigator.userAgent.match(/iPad/i)\r\n\t\t\t|| navigator.userAgent.match(/iPod/i)\r\n\t\t\t|| navigator.userAgent.match(/BlackBerry/i)\r\n\t\t\t|| navigator.userAgent.match(/Windows Phone/i)\r\n\t\t) {\r\n\t\t\tx();\r\n\t\t}\r\n\t\telse {\r\n\t\t\ty();\r\n\t\t}\r\n\t}\r\n}\r\n"]}